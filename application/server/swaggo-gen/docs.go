// Package swaggo_gen Code generated by swaggo/swag. DO NOT EDIT
package swaggo_gen

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/problem": {
            "get": {
                "description": "Get problem list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "problem"
                ],
                "summary": "Get problem list",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/problem/{slug}/judge/task": {
            "post": {
                "description": "Post judge task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "problem"
                ],
                "summary": "Post judge task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "problem slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "judge request",
                        "name": "judgeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.judgeTaskBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/login": {
            "post": {
                "description": "A Cookie will be set if login successfully",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login by account and password",
                "parameters": [
                    {
                        "description": "body",
                        "name": "loginBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.loginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "description": "If correctly logined with cookie, return current user",
                "tags": [
                    "user"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.judgeTaskBody": {
            "type": "object",
            "properties": {
                "src": {
                    "type": "string"
                },
                "srcLanguage": {
                    "type": "string"
                }
            }
        },
        "handler.loginBody": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "example": "admin"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
